<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1728</x>
      <y>560</y>
      <w>264</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::Object/ -
-
int id;
ObjectType type;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1680</x>
      <y>752</y>
      <w>392</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::Scene : Core::Object/ -
-
virtual void update(float delta) = 0;
virtual void draw(float delta) = 0;
virtual void destroy() = 0;
virtual void load(float * progress) = 0;
virtual void start() = 0;
virtual void end() = 0;
virtual void save(DataManager * dataManager) = 0;

	</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1832</x>
      <y>608</y>
      <w>24</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2288</x>
      <y>752</y>
      <w>432</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::DataManager/
-
virtual void getObjectData(std::vector&lt;ObjectData&gt; * data , float * progress) =0;
virtual void startSaveChain()=0;
virtual void save(ObjectData objectData)=0;
virtual void save()=0;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2064</x>
      <y>744</y>
      <w>240</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2392</x>
      <y>320</y>
      <w>408</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
/ObjectData-/
-
bool hasKey(std::string key, bool optional = true)

std::string getString(std::string key, bool optional = true)
 int getInt(std::string key, bool optional = true)
bool getBool(std::string key, bool optional = true)
float getFloat(std::string key, bool optional = true)

void add(Pair&lt;std::string, std::string&gt; pair)
void setString(std::string key, std::string val)
void setInt(std::string key, int val)
void setFloat(std::string key, float val)
void setBool(std::string key, bool flag)

void print();
std::string toString();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>544</y>
      <w>24</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1672</x>
      <y>1320</y>
      <w>360</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
/ObjectManager-/
-
MAX_OBJECTS 1000
-
bool add(Object * o, bool fixedId = false);
bool remove(Object * o);
Object * get(int id);
virtual void freeObjects();
virtual Object * getFirst();
virtual Object * getNext();
int getObjectCount() const;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1664</x>
      <y>1008</y>
      <w>408</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::SceneManager : ObjectManager/
-
virtual void start() = 0;
virtual void startScene(Scene * scene) = 0;
virtual void startScene(int id) = 0;
virtual void loadScene(Scene * scene) = 0;
virtual void loadScene(int id) = 0;
virtual void endScene(Scene * scene) = 0;
virtual void endScene(int id) = 0;
virtual void baseUpdate() = 0;
virtual void update(float delta) = 0;
virtual void draw(float delta) = 0;
virtual void save() = 0;
virtual void destroy() = 0;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1856</x>
      <y>912</y>
      <w>24</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1848</x>
      <y>1224</y>
      <w>24</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>928</y>
      <w>376</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::Window/
-
virtual bool isOpen() const = 0;
virtual void clear() = 0;
virtual void display() = 0;
virtual void draw(DreamEngine::Core::Drawable * drawable) = 0;
virtual void close() = 0;
virtual void show(bool flag=true) = 0;
virtual sf::RenderWindow * getWindow() = 0;

Timer frameTimer;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1112</x>
      <y>624</y>
      <w>376</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::Drawable : Core::Object-/
-
virtual void draw() = 0;
virtual void onDestroy() = 0;
virtual void load() = 0;
virtual ObjectData save() = 0;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>728</y>
      <w>24</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1480</x>
      <y>552</y>
      <w>264</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>216</y>
      <w>456</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::WorldObject : Core::Object-/
-
bool destroyObject = false;
bool isColliding = false;
-
virtual void instantiate(ObjectData data) = 0;
virtual void destroy() = 0;
virtual void onDestroy() = 0;
virtual void draw(float delta) = 0;
virtual ObjectData save() = 0;

void beginCollision();
void endCollision();
virtual void beginActorCollision(void * other, b2Contact * contact) = 0;
virtual void endActorCollision(void * other, b2Contact * contact) = 0;
virtual void beginShapeCollision(void * other, b2Contact * contact) = 0;
virtual void endShapeCollision(void * other, b2Contact * contact) = 0;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>392</y>
      <w>408</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>490.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1840</x>
      <y>424</y>
      <w>24</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1872</x>
      <y>72</y>
      <w>360</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
/Core::Shape : Core::WorldObject-/
-
Actor * parent;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>144</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1912</x>
      <y>144</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>64</y>
      <w>128</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>1040</y>
      <w>408</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=orange
/Core::Builder/
-
virtual void build(std::vector&lt;ObjectData&gt; data, float * progress) = 0;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2176</x>
      <y>1576</y>
      <w>408</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/Builder/
-
void addBuilder(DreamEngine::Core::ObjectBuilder* customBuilder);

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2576</x>
      <y>1592</y>
      <w>488</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>590.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3048</x>
      <y>1544</y>
      <w>432</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>/ObjectBuilder/
-
SceneManager * sceneManager;
Window * window;
CameraManager * cameraManager;
-
virtual bool doesBuild(OBJECTS type);
virtual void build(ObjectData data, OBJECTS type) = 0;
ObjectBuilderDefinition builderComponents;

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2064</x>
      <y>1208</y>
      <w>1064</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;880.0;10.0;1310.0;420.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1376</x>
      <y>1040</y>
      <w>1688</w>
      <h>536</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;650.0;2090.0;650.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>928</x>
      <y>1664</y>
      <w>240</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>/CameraManager/
-
Camera * get(Cameras camera);
void draw(sf::RenderWindow * window);

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>1352</y>
      <w>352</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>/Window/
-
virtual bool isOpen() const override;
virtual void clear() override;
virtual void display() override;
virtual void draw(Core::Drawable * drawable) override;
virtual void close() override;
virtual void show(bool flag = true) override;
sf::RenderWindow * getWindow() const;
void setCameraManager(CameraManager * cameraManager);

Timer frameTimer;
FPSCounter fpsCounter;

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1144</x>
      <y>1072</y>
      <w>24</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>1552</y>
      <w>24</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>376</x>
      <y>1704</y>
      <w>464</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>/Camera-/
-
virtual void move(sf::Vector2f offset);
virtual void setCameraScreenPosition(sf::Vector2f position);
virtual void setCameraWorldPosition(b2Vec2 position);
virtual void setViewport(float ratioX, float ratioY, float widthRatio, float heightRatio);
virtual void rotate(float degrees);
virtual void setRotation(float degrees);
virtual b2Vec2 getWindowWorldSize();
virtual sf::View getView();
virtual sf::Vector2f getScreenPosition();
virtual void draw(Core::Drawable * drawable);
virtual void display();

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>832</x>
      <y>1696</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>648</y>
      <w>376</w>
      <h>1072</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>450.0;10.0;10.0;10.0;10.0;1320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>1208</y>
      <w>160</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Timer-
-
		virtual void start();
		virtual void restart();
		virtual float getElapsedTime();


bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1192</x>
      <y>1072</y>
      <w>96</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;70.0;100.0;70.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1184</x>
      <y>1760</y>
      <w>112</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>FPSCounter-
-
int getFrames();

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1216</x>
      <y>1552</y>
      <w>24</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>704</x>
      <y>240</y>
      <w>312</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=orange
/Animation-/
-
std::string getName() const;
virtual sf::IntRect update();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>0</y>
      <w>224</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>/struct Frame/
-
float duration
sf::Vector2i size
sf::Vector2i offset

bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1112</x>
      <y>232</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
AnimationManager : Core::ObjectManager-
-
Animation * getAnimation(std::string name);
		Animation * get(int index);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>336</y>
      <w>328</w>
      <h>1000</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;1230.0;190.0;1230.0;190.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>272</y>
      <w>120</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1672</x>
      <y>1680</y>
      <w>360</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
WorldObjectManager
-
void draw(float delta);
virtual void update(float delta);
virtual bool destroyObject(DreamEngine::Core::WorldObject * o);
virtual void destroyObjects();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1832</x>
      <y>1448</y>
      <w>24</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>424</y>
      <w>120</w>
      <h>1272</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;1570.0;130.0;1570.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2472</x>
      <y>1088</y>
      <w>24</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;610.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>736</x>
      <y>24</y>
      <w>200</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Animation : Core::Animation
bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>40</y>
      <w>24</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;250.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>40</y>
      <w>232</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1856</x>
      <y>1576</y>
      <w>312</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>/CollisionListener/
bg=orange
-
void BeginContact(b2Contact* contact);
		void EndContact(b2Contact* contact);

		void runCollisions();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2016</x>
      <y>1648</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2064</x>
      <y>552</y>
      <w>304</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=.
OBJECTS
-
OBJECT
DRAWABLE
SHAPE
ACTOR
SCENE
CAMERA
bg=#eeeeee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>488</y>
      <w>256</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Drawable : CoreDrawable-
bg=#eeeeee
-
Window * window</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>744</x>
      <y>512</y>
      <w>384</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>460.0;140.0;460.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>704</x>
      <y>544</y>
      <w>320</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>380.0;480.0;10.0;480.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>544</y>
      <w>256</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Sprite : Drawable-
bg=#eeeeee
-
void setAnimation(std::string name);
void setAngle(float angle);
void setPosition(b2Vec2 bodyPosition);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>248</x>
      <y>480</y>
      <w>264</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>152</x>
      <y>168</y>
      <w>976</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1200.0;80.0;1200.0;10.0;10.0;10.0;10.0;470.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>72</y>
      <w>360</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=#eeeeee
/ Core::Actor : Core::WorldObject-/
-
virtual void update(float delta) = 0;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>640</x>
      <y>96</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Split core from 
basic in code</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2888</x>
      <y>1456</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Add Core ObjectBuilder</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
